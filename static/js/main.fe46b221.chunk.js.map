{"version":3,"sources":["firebase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","event","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","docs","sweetArray","map","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMySweets","where","orderBy","get","updateProfile","autoFocus","marginTop","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe46b221.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASURE_ID\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react'\r\nimport { authService } from '../firebase';\r\n\r\n\r\nfunction AuthForm() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount) {\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n        }   \r\n    };\r\n\r\n    // newAccount의 이전값을 가져옴\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                    <input \r\n                        name=\"email\"\r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        required \r\n                        value={email} \r\n                        onChange={onChange}\r\n                        className=\"authInput\"\r\n                    />\r\n                    <input \r\n                        name=\"password\"\r\n                        type=\"password\" \r\n                        placeholder=\"Password\" \r\n                        required\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        className=\"authInput\"\r\n                    />\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"authInput authSubmit\"\r\n                        value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                    />\r\n                    {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in.\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import React from  'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport { authService, firebaseInstance } from '../firebase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    \r\n    \r\n    const onSocialClick = async (e) => {\r\n        console.log(e.target.name)\r\n        const {\r\n            target : { name },\r\n        } = e;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default Auth;","import React, { useState } from 'react'\r\nimport { dbService, storageService } from '../firebase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sweet = ({ sweetObj, isOwner }) =>  {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this sweet?\");\r\n        console.log(ok);\r\n        if (ok) {\r\n            // delete sweet\r\n            await dbService.doc(`sweets/${sweetObj.id}`).delete();\r\n            await storageService.refFromURL(sweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(sweetObj, newSweet);\r\n        await dbService.doc(`sweets/${sweetObj.id}`).update({\r\n            text: newSweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (e) => {\r\n        const {\r\n            target : { value },\r\n        } = e;\r\n        setNewSweet(value);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"sweet\">\r\n            { editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container sweetEdit\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Edit your sweet\" \r\n                        value={newSweet} \r\n                        required\r\n                        onChange={onChange}\r\n                    />\r\n                    \r\n                    <input type=\"submit\" value=\"Update Sweet\" className=\"formBtn\" />\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                   Cancel\r\n                </span>\r\n                </>\r\n            ) : ( \r\n                <>\r\n                    <h4>{sweetObj.text}</h4>\r\n                    {sweetObj.attachmentUrl && <img src={sweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                    <div class=\"sweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                    )}\r\n                </>\r\n        )}\r\n        </div>\r\n    );\r\n};    \r\n\r\nexport default Sweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from '../firebase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SweetFactory = ({ userObj }) => {\r\n  const [sweet, setSweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (sweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const sweetObj = {\r\n      text: sweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"sweets\").add(sweetObj);\r\n    setSweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default SweetFactory;","import React, { useState, useEffect } from  'react';\r\nimport { dbService, storageService } from '../firebase';\r\nimport Sweet from '../components/Sweet';\r\nimport SweetFactory from '../components/SweetFactory';\r\n\r\nconst Home = ( { userObj } ) => {\r\n    const [sweets, setSweets] = useState([]);\r\n\r\n    // const getSweets = async() => {\r\n    //     const dbSweets = await dbService.collection(\"sweets\").get();\r\n    //     dbSweets.forEach(document => {\r\n    //         const sweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id\r\n    //         };\r\n    //         setSweets((prev) => [sweetObject, ...prev])            \r\n    //     })\r\n    // }\r\n\r\n    useEffect(() => {\r\n        // getSweets();\r\n        dbService.collection(\"sweets\").onSnapshot((snapshot) => {\r\n            console.log(snapshot.docs)\r\n            const sweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n        }));\r\n        setSweets(sweetArray);\r\n      });\r\n    }, []);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <SweetFactory userObj={userObj} />\r\n            <div>\r\n                {sweets.map((sweet) => (\r\n                <Sweet \r\n                    key={sweet.id} \r\n                    sweetObj={sweet} \r\n                    isOwner={sweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\nexport default Home;","import React , { useEffect, useState } from  'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService, dbService } from '../firebase';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const getMySweets = async () => {\r\n        const sweets = await dbService\r\n          .collection(\"sweets\")\r\n          .where(\"creatorId\", \"==\", userObj.uid)\r\n          .orderBy(\"createdAt\")\r\n          .get();\r\n        console.log(sweets.docs.map((doc) => doc.data()));\r\n      };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({\r\n            displayName: newDisplayName,\r\n          });\r\n          refreshUser();\r\n        }\r\n      }\r\n\r\n\r\n    useEffect(() => {\r\n        getMySweets();\r\n    }, []);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display name\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n          Log Out\r\n        </span>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    console.log(userObj)\r\n\r\n\r\nreturn (\r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router , Redirect, Route, Switch } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj= {userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                   <div\r\n                    style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    >\r\n                        <Route exact path = \"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path = \"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                    <Route exact path = \"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from './Router'\r\nimport { authService } from '../firebase'\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n   authService.onAuthStateChanged((user) => {\r\n     if(user) {\r\n       setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n     } else {\r\n       setUserObj(null);\r\n     }\r\n     setInit(true);\r\n   })\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    console.log(authService.currentUser);\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  }\r\n\r\n  // 유저의 로그인 여부를 알 수 있게 됨\r\n  // setInterval(() => {\r\n  //   console.log(authService.currentUser);\r\n  // }, 2000);\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n  }\r\n  \r\n  export default App;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}